(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){"use strict";var hexAddressRegex=/0x((\d|[abcdefABCDEF]){0,2})+/;function byDecimalAddress(a,b){return a.decimalAddress<b.decimalAddress?-1:1}function processLine(acc,x){if(!x.trim().length)return acc;var parts=x.split(/ +/);if(parts.length<3)return acc;var decimal=parseInt(parts[0],16);var item={address:parts[0],size:parts[1],decimalAddress:decimal,symbol:parts.slice(2).join(" ")};acc.push(item);return acc}function JITResolver(map){if(!(this instanceof JITResolver))return new JITResolver(map);var lines=Array.isArray(map)?map:map.split("\n");this._addresses=lines.reduce(processLine,[]).sort(byDecimalAddress);this._len=this._addresses.length}module.exports=JITResolver;var proto=JITResolver.prototype;proto.resolve=function resolve(hexAddress){var match=null;var a=typeof hexAddress==="number"?hexAddress:parseInt(hexAddress,16);for(var i=0;i<this._len;i++){if(a<this._addresses[i].decimalAddress){match=this._addresses[i-1];break}}return match};function defaultGetHexAddress(line){var m=line.match(hexAddressRegex);return m&&m[0]}proto.resolveMulti=function resolveMulti(stack,getHexAddress){getHexAddress=getHexAddress||defaultGetHexAddress;var self=this;var isLines=Array.isArray(stack);var lines=isLines?stack:stack.split("\n");function processLine(line){var address=getHexAddress(line);if(!address)return line;var resolved=self.resolve(address);if(!resolved)return line;return line.replace(address,resolved.symbol)}var processedLines=lines.map(processLine);return isLines?processedLines:processedLines.join("\n")}},{}],2:[function(require,module,exports){"use strict";var jitResolver=require("../");var resolver,helped=0;var inputfileEl=document.getElementById("inputfile-button"),stackOriginalEl=document.getElementById("stack-original"),stackResolvedEl=document.getElementById("stack-resolved"),addressesDataEl=document.getElementById("hexaddresses"),addressesEl=document.getElementById("input-hexaddress"),resolvedAddressEl=document.getElementById("address-resolved"),helpEl=document.getElementById("help"),instructionsEl=document.getElementsByClassName("instructions")[0];function readFile(file,cb){var fileReader=new FileReader;fileReader.readAsText(file,"utf-8");fileReader.onload=function onload(err){cb(err,fileReader.result)}}function resolveStack(stack){var res;try{res=resolver.resolveMulti(stack)}catch(e){res=e.toString()}finally{stackResolvedEl.innerText=res}}function fillAddressesList(addresses){addressesDataEl.innerHTML=addresses.map(function(x){return'<option value="'+x.address+'">'})}function onAddress(e){var add=e.target.value;if(!resolver){resolvedAddressEl.value="Please load a map file first";return}var resolved=resolver.resolve(add);var result=resolved&&resolved.symbol||"["+add+"] was not found";resolvedAddressEl.value=result}function onFile(e){var file=e.target.files[0];if(!file)return;readFile(file,function(e){resolver=jitResolver(e.target.result);fillAddressesList(resolver._addresses);if(!stackOriginalEl.value){stackResolvedEl.innerText="Please paste a stack to have its symbols resolved or type hex addresses into the box";return}resolveStack(stackOriginalEl.value)})}function onStack(e){if(!resolver){stackResolvedEl.innerText="Please load a map file to resolve symbols from the given stack";return}resolveStack(e.target.value)}function onHelp(e){instructionsEl.setAttribute("class",helped++%2?"instructions hidden":"instructions")}inputfileEl.addEventListener("change",onFile);stackOriginalEl.addEventListener("input",onStack);addressesEl.addEventListener("input",onAddress);helpEl.addEventListener("click",onHelp)},{"../":1}]},{},[2]);